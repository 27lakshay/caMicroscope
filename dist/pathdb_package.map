{"version":3,"sources":["pathdb_package.js"],"names":["PathDbMods","getCookie","key","cookiestring","RegExp","exec","document","cookie","decodeURIComponent","toString","replace","warn","prototype","default_findSlide","Store","findSlide","slide","specimen","study","location","fetch","Headers","then","response","ok","json","statusText","url","default_getSlide","getSlide","id","default_loadImg","CaMic","loadImg","func","img_id","URLSearchParams","window","search","get","slideId","slideName","store","data","mpp","field_mpp_y","length","mpp_y","value","field_mpp_x","mpp_x","field_iip_path","viewer","open","createScalebar","OpenSeadragonImaging","ImagingHelper","setMaxZoom","x","name","call","text","textContent","catch","error","e","console"],"mappings":";AAAA,SAASA,IAKEC,SAAAA,EAAUC,GAEbC,IAAAA,EAAaC,OAAUF,EAAI,SAASG,KAAKC,SAASC,QAC/CC,OAAAA,mBAAqBL,EAAeA,EAAaM,WAAWC,QAAQ,UAAU,IAAM,IAErFC,QAAAA,KAAK,yBACPC,MAAAA,UAAUC,kBAAoBC,MAAMF,UAAUG,UAC9CH,MAAAA,UAAUG,UAAY,SAASC,EAAOC,EAAUC,EAAOC,GAEpDC,OAAAA,MADG,oDAAoDJ,EAAM,gBAClD,CACH,YAAA,UACP,KAAA,OACG,QAAA,IAAIK,QAAQ,CACF,cAAA,SAAWpB,EAAU,aAEvCqB,KAAK,SAASC,GACT,OAACA,EAASC,GAKPD,EAASE,OALS,CAChB,OAACF,EAASC,GACXD,KAAAA,EAASG,WACVH,IAAAA,EAASI,QAKhBf,MAAAA,UAAUgB,iBAAmBd,MAAMF,UAAUiB,SAC7CjB,MAAAA,UAAUiB,SAAW,SAASC,GAE3BV,OAAAA,MADG,oDAAoDU,EAAG,gBAChD,CACF,YAAA,UACP,KAAA,OACG,QAAA,IAAIT,QAAQ,CACF,cAAA,SAAWpB,EAAU,aAEvCqB,KAAK,SAASC,GACT,OAACA,EAASC,GAKPD,EAASE,OALS,CAChB,OAACF,EAASC,GACXD,KAAAA,EAASG,WACVH,IAAAA,EAASI,QAKhBf,MAAAA,UAAUmB,gBAAkBC,MAAMpB,UAAUqB,QAC5CrB,MAAAA,UAAUqB,QAAU,SAASC,GAAM,IAAA,EAAA,KAEnCC,EADY,IAAIC,gBAAgBC,OAAOlB,SAASmB,QAC7BC,IAAI,WACvBC,EAAUL,EACTK,KAAAA,QAAUA,EACVC,KAAAA,UAAYD,EACZtB,KAAAA,MAAQ,GACRD,KAAAA,SAAW,GACXyB,KAAAA,MAAMb,SAASW,GAASlB,KAAK,SAAQ,GAWpCqB,GATCC,EAAAA,IAAM,IACPD,EAAKE,aAAeF,EAAKE,YAAYC,QAAQ,IAC1CC,EAAAA,MAAQJ,EAAKE,YAAY,GAAGG,MAC5BJ,EAAAA,IAAM,EAAKG,OAEdJ,EAAKM,aAAeN,EAAKM,YAAYH,QAAQ,IAC1CI,EAAAA,MAAQP,EAAKM,YAAY,GAAGD,MAC5BJ,EAAAA,IAAM,EAAKM,SAEdP,EAAKQ,gBAAkBA,eAAeL,QAAQ,GAM1C,KAAA,sBALD3B,EAAAA,SAAWwB,EAAKQ,eAAe,GAAGH,MAElCrB,EAAAA,IAAM,mBAAqBQ,EAAS,OACpCiB,EAAAA,OAAOC,KAAK1B,KAKdyB,EAAAA,OAAOR,IAAM,EAAKA,IAClBQ,EAAAA,OAAOF,MAAQ,EAAKA,MACpBE,EAAAA,OAAOL,MAAQ,EAAKA,MAGtB,EAAKH,KAAe,KAAV,EAAKA,KAAU,EAAKU,eAAe,EAAKV,KACjC,IAAIW,qBAAqBC,cAAc,CACjD,OAAA,EAAKJ,SAEDK,WAAW,GAErBC,IAAAA,EAAI,GACN,EAAF,IAAW,EAAKlB,QACdmB,EAAAA,KAAO,EAAKlB,UACZvB,EAAAA,MAAQ,EAAKA,MACbD,EAAAA,SAAW,EAAKA,SAChB2B,EAAAA,IAAM,EAAKA,IACXM,EAAAA,MAAQ,EAAKA,MACbH,EAAAA,MAAQ,EAAKA,MACb5B,EAAAA,SAAW,EAAKA,SAChBQ,EAAAA,IAAM,EAAKA,IACTO,GAAwB,mBAATA,GACZ0B,EAAAA,KAAK,KAAMF,GAEVG,QAAAA,KAAKC,YAAb,6BAECC,MAAM,SAAG,GACFC,QAAAA,MAAMC,GACNJ,QAAAA,KAAKC,YAAc,+CAQjC9D,IACAkE,QAAQvD,KAAK","file":"pathdb_package.map","sourceRoot":"../package","sourcesContent":["function PathDbMods() {\n  /**\n  Gets a named cookie value\n  * @param {string} key - the key to get from the cookie\n  **/\n  function getCookie(key)\n  {\n    var cookiestring=RegExp(\"\"+key+\"[^;]+\").exec(document.cookie);\n    return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./,\"\") : \"\");\n  }\n  console.warn(\"{PathDB mods enabled}\")\n  Store.prototype.default_findSlide = Store.prototype.findSlide;\n  Store.prototype.findSlide = function(slide, specimen, study, location){\n    var url = \"https://vinculum.bmi.stonybrookmedicine.edu/node/\"+slide+\"?_format=json\"\n    return fetch(url, {\n      credentials: \"include\",\n      mode: \"cors\",\n      headers: new Headers({\n        'Authorization': 'Basic ' + getCookie(\"token\"),\n      })\n    }).then(function(response) {\n        if (!response.ok) return {\n          error: !response.ok,\n          text: response.statusText,\n          url: response.url\n        };\n        return response.json();\n      })\n  }\n  Store.prototype.default_getSlide = Store.prototype.getSlide\n  Store.prototype.getSlide = function(id){\n    var url = \"https://vinculum.bmi.stonybrookmedicine.edu/node/\"+id+\"?_format=json\"\n    return fetch(url,{\n      credentials: \"include\",\n      mode: \"cors\",\n      headers: new Headers({\n        'Authorization': 'Basic ' + getCookie(\"token\"),\n      })\n    }).then(function(response){\n        if (!response.ok) return {\n          error: !response.ok,\n          text: response.statusText,\n          url: response.url\n        };\n        return response.json();\n      })\n  }\n  CaMic.prototype.default_loadImg = CaMic.prototype.loadImg\n  CaMic.prototype.loadImg = function(func) {\n    var urlParams = new URLSearchParams(window.location.search);\n    var img_id = urlParams.get('slideId');\n    let slideId = img_id\n    this.slideId = slideId\n    this.slideName = slideId\n    this.study = \"\"\n    this.specimen = \"\"\n    this.store.getSlide(slideId).then(data => {\n      // set mpp\n      this.mpp = 1e9\n      if (data.field_mpp_y && data.field_mpp_y.length>=1){\n        this.mpp_y = data.field_mpp_y[0].value\n        this.mpp = this.mpp_y\n      }\n      if (data.field_mpp_x && data.field_mpp_x.length>=1){\n        this.mpp_x = data.field_mpp_x[0].value\n        this.mpp = this.mpp_x\n      }\n      if (data.field_iip_path && field_iip_path.length>=1){\n        this.location = data.field_iip_path[0].value\n        // MAKE URL FOR IIP\n        this.url = \"../../img/Slide/\" + img_id + \".dzi\"\n        this.viewer.open(url);\n      } else {\n        throw \"I'm a Little Teapot\"\n      }\n\n      this.viewer.mpp = this.mpp;\n      this.viewer.mpp_x = this.mpp_x;\n      this.viewer.mpp_y = this.mpp_y;\n\n      //set scalebar\n      if(this.mpp&&this.mpp!=1e9) this.createScalebar(this.mpp)\n      var imagingHelper = new OpenSeadragonImaging.ImagingHelper({\n        viewer: this.viewer\n      });\n      imagingHelper.setMaxZoom(1);\n      // create item to pass to the callback function, previously x[0] (slide data)\n      let x = {}\n      x['_id'] = this.slideId\n      x.name = this.slideName\n      x.study = this.study\n      x.specimen = this.specimen\n      x.mpp = this.mpp;\n      x.mpp_x = this.mpp_x;\n      x.mpp_y = this.mpp_y;\n      x.location = this.location;\n      x.url = this.url;\n      if (func && typeof func === 'function'){\n        func.call(null, x);\n      }\n      Loading.text.textContent = `loading slide's tiles...`;\n      // we may want another init.js or our own callback\n    }).catch(e=>{\n      console.error(e)\n      Loading.text.textContent = \"ERROR - Erich is Hungry, please Feed Birb\"\n      //if(func && typeof func === 'function') func.call(null,{hasError:true,message:e});\n    })\n\n  }\n}\n\n\nPathDbMods()\nconsole.warn(\"This setup is intended for pathdb\")\n"]}