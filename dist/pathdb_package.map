{"version":3,"sources":["pathdb_package.js"],"names":["PathDbMods","getCookie","key","cookiestring","RegExp","exec","document","cookie","decodeURIComponent","toString","replace","log","then","x","json","hasOwnProperty","token","warn","prototype","default_findMark","Store","findMark","slide","name","specimen","study","footprint","source","x0","x1","y0","y1","url","base","query","fetch","objToParamStr","errorHandler","filterBroken","getMarkByIds","ids","Array","isArray","suffix","stringifiedIds","map","id","join","findMarkTypes","parseInt","parseFloat","error","default_findSlide","findSlide","location","Headers","response","ok","statusText","default_getSlide","getSlide","default_findHeatmapType","findHeatmapType","subject_id","subject","case_id","case","slideId","default_findHeatmap","findHeatmap","default_getHeatmap","getHeatmap","default_getCurrentStatesURL","StatesHelper","getCurrentStatesURL","isImageCoordinate","states","getCurrentStates","encodeStates","origin","pathname","$D","params","mode","default_loadImg","CaMic","loadImg","func","pathdb_id","URLSearchParams","window","search","get","slideName","image_id","study_id","store","data","mpp","field_mpp_y","length","mpp_y","value","field_mpp_x","mpp_x","referencepixelphysicalvaluey","referencepixelphysicalvaluex","field_subject_id","field_case_id","field_image_id","field_study_id","field_iip_path","viewer","open","createScalebar","OpenSeadragonImaging","ImagingHelper","setMaxZoom","call","text","textContent","catch","e","console"],"mappings":";AAAA,SAASA,IAgBEC,SAAAA,EAAUC,GACbC,IAAAA,EAAeC,OAAYF,EAAM,SAASG,KAAKC,SAASC,QACrDC,OAAAA,mBAAqBL,EAAeA,EAAaM,WAAWC,QAAQ,UAAW,IAAM,IAjBtFC,QAAAA,IAAI,mBAEN,MAAA,aAAc,CACV,OAAA,MACK,YAAA,YACZC,KAAK,SAAA,GAAKC,OAAAA,EAAEC,SAAQF,KAAK,SAAK,GACvBD,QAAAA,IAAIE,GACRA,EAAEE,eAAe,UAAYF,EAAEG,QACxBT,SAAAA,OAAS,SAAWM,EAAEG,MAAQ,OAWnCC,QAAAA,KAAK,yBACPC,MAAAA,UAAUC,iBAAmBC,MAAMF,UAAUG,SAC7CH,MAAAA,UAAUG,SAAW,SAASC,EAAOC,EAAMC,EAAUC,EAAOC,EAAWC,EAAQC,EAAIC,EAAIC,EAAIC,GAAI,IAAA,EAAA,KAE/FC,EAAM,KAAKC,KADF,YAETC,EAAQ,GA+BLC,OA9BHb,IACIA,EAAAA,MAAQA,GAEZC,IACIA,EAAAA,KAAOA,GAEXC,IACIA,EAAAA,SAAWA,GAEfC,IACIA,EAAAA,MAAQA,GAEZC,IACIA,EAAAA,UAAYA,GAEhBC,IACIA,EAAAA,OAASA,GAEbC,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAENI,MAAMH,EAAM,IAAMI,cAAcF,GAAQ,CAChC,YAAA,cACP,KAAA,SACLtB,KAAK,KAAKyB,cAAczB,KAAK,SAAA,GAAK,OAAA,EAAK0B,aAAazB,EAAG,WAEtDK,MAAAA,UAAUqB,aAAe,SAASC,EAAKlB,EAAOG,EAAOD,EAAUG,EAAQD,EAAWE,EAAIC,EAAIC,EAAIC,GAAI,IAAA,EAAA,KAClG,IAACU,MAAMC,QAAQF,KAASlB,EACnB,MAAA,CACK,UAAA,EACD,QAAA,oBAGTqB,IACAX,EAAM,KAAKC,KADF,aAETC,EAAQ,GACRU,EAAiBJ,EAAIK,IAAI,SAAA,GAAUC,MAAAA,IAAAA,EAAV,MAAiBC,KAAK,KA2B5CZ,OA1BDZ,EAAAA,KAAWqB,IAAAA,EAAjB,IACMtB,EAAAA,MAAQA,EACVG,IACIA,EAAAA,MAAQA,GAEZD,IACIA,EAAAA,SAAWA,GAEfG,IACIA,EAAAA,OAASA,GAEbD,IACIA,EAAAA,UAAYA,GAEhBE,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAENI,MAAMH,EAAM,IAAMI,cAAcF,GAAQ,CAChC,YAAA,cACP,KAAA,SACLtB,KAAK,KAAKyB,cAAczB,KAAK,SAAA,GAAK,OAAA,EAAK0B,aAAazB,EAAG,WAEtDK,MAAAA,UAAU8B,cAAgB,SAAS1B,EAAOC,GAC1CoB,IAAAA,EAAS,aACTX,EAAM,KAAKC,KAAOU,EAClBT,EAAQ,GACT,OAACZ,GAKC2B,SAAS3B,IAAQA,GAAS4B,WAAW5B,IAAQA,EAC1CA,EAAAA,MAAQ,IAAMA,EAAQ,IAEtBA,EAAAA,MAAQA,EAGZC,IACIA,EAAAA,KAAOA,EACJ,EAAA,kBAEJY,MAAMH,EAAM,IAAMI,cAAcF,GAAQ,CAChC,YAAA,cACP,KAAA,SACLtB,KAAK,KAAKyB,gBAjBHc,QAAAA,MAAM,wCACP,OAkBLjC,MAAAA,UAAUkC,kBAAoBhC,MAAMF,UAAUmC,UAC9CnC,MAAAA,UAAUmC,UAAY,SAAS/B,EAAOE,EAAUC,EAAO6B,GAEpDnB,OAAAA,MADG,SAAWb,EAAQ,gBACX,CACV,KAAA,OACG,QAAA,IAAIiC,QAAQ,CACF,cAAA,UAAYtD,EAAU,aAExCW,KAAK,SAAS4C,GACX,OAACA,EAASC,GAKPD,EAAS1C,OAAOF,KAAK,SAAA,GAAK,MAAA,CAACC,KALT,CAChB,OAAC2C,EAASC,GACXD,KAAAA,EAASE,WACVF,IAAAA,EAASxB,QAKdd,MAAAA,UAAUyC,iBAAmBvC,MAAMF,UAAU0C,SAC7C1C,MAAAA,UAAU0C,SAAW,SAASd,GAE3BX,OAAAA,MADG,SAAWW,EAAK,gBACR,CACV,KAAA,OACG,QAAA,IAAIS,QAAQ,CACF,cAAA,UAAYtD,EAAU,aAExCW,KAAK,SAAS4C,GACX,OAACA,EAASC,GAKPD,EAAS1C,OAAOF,KAAK,SAAA,GAAK,MAAA,CAACC,KALT,CAChB,OAAC2C,EAASC,GACXD,KAAAA,EAASE,WACVF,IAAAA,EAASxB,QAOdd,MAAAA,UAAU2C,wBAA0BzC,MAAMF,UAAU4C,gBACpD5C,MAAAA,UAAU4C,gBAAkB,SAASxC,EAAOC,GAAM,IAAA,EAAA,KAElDS,EAAM,KAAKC,KADF,gBAETC,EAAQ,GAYLC,OAXH,KAAK4B,aACDC,EAAAA,QAAU,KAAKD,YAEnB,KAAKE,SACDC,EAAAA,KAAO,KAAKD,QACZ3C,EAAAA,MAAQ,KAAK2C,UAEbC,EAAAA,KAAO,KAAKC,QACZ7C,EAAAA,MAAQ,KAAK6C,SAGdhC,MAAMH,EAAM,IAAMI,cAAcF,GAAQ,CAChC,YAAA,UACP,KAAA,SACLtB,KAAK,KAAKyB,cAAczB,KAAK,SAAA,GAAG,OAAA,EAAK0B,aAAazB,EAAG,cAIpDK,MAAAA,UAAUkD,oBAAsBhD,MAAMF,UAAUmD,YAChDnD,MAAAA,UAAUmD,YAAc,SAAS/C,EAAOC,GAAM,IAAA,EAAA,KAE9CS,EAAM,KAAKC,KADF,eAETC,EAAQ,GAcLC,OAZH,KAAK4B,aACDC,EAAAA,QAAU,KAAKD,YAEnB,KAAKE,SACDC,EAAAA,KAAO,KAAKD,QACZ3C,EAAAA,MAAQ,KAAK2C,UAEbC,EAAAA,KAAO,KAAKC,QACZ7C,EAAAA,MAAQ,KAAK6C,SAElB5C,IAAMW,EAAMX,KAAOA,GAEfY,MAAMH,EAAM,IAAMI,cAAcF,GAAQ,CAChC,YAAA,UACP,KAAA,SACLtB,KAAK,KAAKyB,cAAczB,KAAK,SAAA,GAAG,OAAA,EAAK0B,aAAazB,EAAG,cAEpDK,MAAAA,UAAUoD,mBAAqBlD,MAAMF,UAAUqD,WAC/CrD,MAAAA,UAAUqD,WAAa,SAASjD,EAAOjB,GAAM,IAAA,EAAA,KAE7C2B,EAAM,KAAKC,KADF,cAETC,EAAQ,GAWLC,OAVH,KAAK4B,aACDC,EAAAA,QAAU,KAAKD,YAEnB,KAAKE,QACDC,EAAAA,KAAO,KAAKD,QAEZC,EAAAA,KAAO,KAAKC,QAEjB9D,IAAM6B,EAAM7B,KAAOA,GAEf8B,MAAMH,EAAM,IAAMI,cAAcF,GAAQ,CAChC,YAAA,UACP,KAAA,SACLtB,KAAK,KAAKyB,cAAczB,KAAK,SAAA,GAAG,OAAA,EAAK0B,aAAazB,EAAG,cAG7CK,aAAAA,UAAUsD,4BAA8BC,aAAavD,UAAUwD,oBACtD,oBAAA,WAASC,IAAAA,EAAkB,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GAC3CC,EAASH,aAAaI,iBAAiBF,GACxC,GAACC,EAGMtB,OAFF3C,QAAAA,IAAIiE,GACHH,EAAAA,aAAaK,aAAaF,GACzBtB,GAAAA,SAASyB,OAASzB,SAAS0B,SAAoBC,YAAAA,GAAGC,OAAOf,QAAkBc,WAAAA,GAAGC,OAAON,OAAeK,SAAAA,GAAGC,OAAOC,MAIpHjE,MAAAA,UAAUkE,gBAAkBC,MAAMnE,UAAUoE,QAC5CpE,MAAAA,UAAUoE,QAAU,SAASC,GAAM,IAAA,EAAA,KAEnCC,EADY,IAAIC,gBAAgBC,OAAOpC,SAASqC,QAC1BC,IAAI,WACzBzB,KAAAA,QAAUqB,EACVK,KAAAA,UAAYL,EACZ/D,KAAAA,MAAQ,GACRD,KAAAA,SAAW,GACXuC,KAAAA,WAAa,GACbE,KAAAA,QAAU,GACV6B,KAAAA,SAAW,GACXC,KAAAA,SAAW,GACXC,KAAAA,MAAMpC,SAAS4B,GAAW5E,KAAK,SAAQ,GAoCtCqF,GAnCGA,EAAAA,EAAK,GACJtF,QAAAA,IAAIsF,GAEPC,EAAAA,IAAM,IAEPD,EAAKE,aAAeF,EAAKE,YAAYC,QAAU,IAC5CC,EAAAA,MAAQJ,EAAKE,YAAY,GAAGG,MAC5BJ,EAAAA,IAAM,EAAKG,OAEdJ,EAAKM,aAAeN,EAAKM,YAAYH,QAAU,IAC5CI,EAAAA,MAAQP,EAAKM,YAAY,GAAGD,MAC5BJ,EAAAA,IAAM,EAAKM,OAEdP,EAAKQ,8BAAgCR,EAAKQ,6BAA6BL,QAAS,IAC7EC,EAAAA,MAAQJ,EAAKQ,6BAA6B,GAC1CP,EAAAA,IAAM,EAAKG,OAEdJ,EAAKS,8BAAgCT,EAAKS,6BAA6BN,QAAS,IAC7EI,EAAAA,MAAQP,EAAKS,6BAA6B,GAC1CR,EAAAA,IAAM,EAAKM,OAGfP,EAAKU,kBAAoBV,EAAKU,iBAAiBP,QAAU,IACrDrC,EAAAA,WAAakC,EAAKU,iBAAiB,GAAGL,OAE1CL,EAAKW,eAAiBX,EAAKW,cAAcR,QAAU,IAC/CnC,EAAAA,QAAUgC,EAAKW,cAAc,GAAGN,OAEpCL,EAAKY,iBACDf,EAAAA,SAAWG,EAAKY,eAAe,GAAGP,OAEtCL,EAAKa,iBACDf,EAAAA,SAAWE,EAAKa,eAAe,GAAGR,SAGrCL,EAAKc,gBAAkBd,EAAKc,eAAeX,QAAU,GAMjD,KAAA,qCALD9C,EAAAA,SAAW2C,EAAKc,eAAe,GAAGT,MAElCtE,EAAAA,IAAM,+BAAiC,EAAKsB,SAAW,OACvD0D,EAAAA,OAAOC,KAAK,EAAKjF,KAKnBgF,EAAAA,OAAOd,IAAM,EAAKA,IAClBc,EAAAA,OAAOR,MAAQ,EAAKA,MACpBQ,EAAAA,OAAOX,MAAQ,EAAKA,MAGrB,EAAKH,KAAmB,KAAZ,EAAKA,KAAY,EAAKgB,eAAe,EAAKhB,KACtC,IAAIiB,qBAAqBC,cAAc,CACjD,OAAA,EAAKJ,SAEDK,WAAW,GAErBxG,IAAAA,EAAI,GACN,EAAF,IAAW,EAAKsD,QACd5C,EAAAA,KAAO,EAAKsE,UAGZ9B,EAAAA,WAAa,EAAKA,WAClBE,EAAAA,QAAU,EAAKA,QACf6B,EAAAA,SAAW,EAAKA,SAChBC,EAAAA,SAAW,EAAKA,SAEhBtE,EAAAA,MAAQ,EAAKA,MACbD,EAAAA,SAAW,EAAKA,SAChB0E,EAAAA,IAAM,EAAKA,IACXM,EAAAA,MAAQ,EAAKA,MACbH,EAAAA,MAAQ,EAAKA,MACb/C,EAAAA,SAAW,EAAKA,SAChBtB,EAAAA,IAAM,EAAKA,IACTuD,GAAwB,mBAATA,GACZ+B,EAAAA,KAAK,KAAMzG,GAEV0G,QAAAA,KAAKC,YAAb,6BAECC,MAAM,SAAK,GACJtE,QAAAA,MAAMuE,GACNH,QAAAA,KAAKC,YAAc,gDAQjCxH,IACA2H,QAAQ1G,KAAK","file":"pathdb_package.map","sourceRoot":"../package","sourcesContent":["function PathDbMods() {\n  console.log(\"PathDbMods()...\");\n  // put the auth jwt in cookie as token\n  fetch(\"/jwt/token\", {\n    method: 'GET',\n    credentials: 'include'\n  }).then(x => x.json()).then(x => {\n    console.log(x)\n    if (x.hasOwnProperty('token') && x.token) {\n      document.cookie = \"token=\" + x.token + \";\"\n    }\n  })\n  /**\n  Gets a named cookie value\n  * @param {string} key - the key to get from the cookie\n  **/\n  function getCookie(key) {\n    var cookiestring = RegExp(\"\" + key + \"[^;]+\").exec(document.cookie);\n    return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\");\n  }\n  console.warn(\"{PathDB mods enabled}\")\n  Store.prototype.default_findMark = Store.prototype.findMark\n  Store.prototype.findMark = function(slide, name, specimen, study, footprint, source, x0, x1, y0, y1) {\n    var suffix = \"Mark/find\"\n    var url = this.base + suffix;\n    var query = {}\n    if (slide) {\n      query.slide = slide\n    }\n    if (name) {\n      query.name = name\n    }\n    if (specimen) {\n      query.specimen = specimen\n    }\n    if (study) {\n      query.study = study\n    }\n    if (footprint) {\n      query.footprint = footprint\n    }\n    if (source) {\n      query.source = source\n    }\n    if (x0) {\n      query.x0 = x0;\n    }\n    if (x1) {\n      query.x1 = x1;\n    }\n    if (y0) {\n      query.y0 = y0;\n    }\n    if (y1) {\n      query.y1 = y1;\n    }\n    return fetch(url + \"?\" + objToParamStr(query), {\n      credentials: \"same-origin\",\n      mode: \"cors\"\n    }).then(this.errorHandler).then(x => this.filterBroken(x, \"mark\"))\n  }\n  Store.prototype.getMarkByIds = function(ids, slide, study, specimen, source, footprint, x0, x1, y0, y1) {\n    if (!Array.isArray(ids) || !slide) {\n      return {\n        hasError: true,\n        message: 'args are illegal'\n      }\n    }\n    var suffix = \"Mark/multi\"\n    var url = this.base + suffix;\n    var query = {}\n    var stringifiedIds = ids.map(id => `\"${id}\"`).join(',');\n    query.name = `[${stringifiedIds}]`;\n    query.slide = slide;\n    if (study) {\n      query.study = study;\n    }\n    if (specimen) {\n      query.specimen = specimen;\n    }\n    if (source) {\n      query.source = source;\n    }\n    if (footprint) {\n      query.footprint = footprint;\n    }\n    if (x0) {\n      query.x0 = x0;\n    }\n    if (x1) {\n      query.x1 = x1;\n    }\n    if (y0) {\n      query.y0 = y0;\n    }\n    if (y1) {\n      query.y1 = y1;\n    }\n    return fetch(url + \"?\" + objToParamStr(query), {\n      credentials: \"same-origin\",\n      mode: \"cors\"\n    }).then(this.errorHandler).then(x => this.filterBroken(x, \"mark\"))\n  }\n  Store.prototype.findMarkTypes = function(slide, name) {\n    var suffix = \"Mark/types\"\n    var url = this.base + suffix;\n    var query = {}\n    if(!slide) {\n      console.error('Store.findMarkTypes needs slide ... ');\n      return null;\n    }\n    // pathdb numeric->str coerce\n    if ((parseInt(slide)==slide)||(parseFloat(slide)==slide)){\n      query.slide = '\"' + slide + '\"'\n    } else {\n      query.slide = slide\n    }\n\n    if (name) {\n      query.name = name\n      suffix = \"Mark/typesExec\"\n    }\n    return fetch(url + \"?\" + objToParamStr(query), {\n      credentials: \"same-origin\",\n      mode: \"cors\"\n    }).then(this.errorHandler)\n  }\n  Store.prototype.default_findSlide = Store.prototype.findSlide;\n  Store.prototype.findSlide = function(slide, specimen, study, location) {\n    var url = \"/node/\" + slide + \"?_format=json\"\n    return fetch(url, {\n      mode: \"cors\",\n      headers: new Headers({\n        'Authorization': 'Bearer ' + getCookie(\"token\"),\n      })\n    }).then(function(response) {\n      if (!response.ok) return {\n        error: !response.ok,\n        text: response.statusText,\n        url: response.url\n      };\n      return response.json().then(x => [x]);\n    })\n  }\n  Store.prototype.default_getSlide = Store.prototype.getSlide\n  Store.prototype.getSlide = function(id) {\n    var url = \"/node/\" + id + \"?_format=json\"\n    return fetch(url, {\n      mode: \"cors\",\n      headers: new Headers({\n        'Authorization': 'Bearer ' + getCookie(\"token\"),\n      })\n    }).then(function(response) {\n      if (!response.ok) return {\n        error: !response.ok,\n        text: response.statusText,\n        url: response.url\n      };\n      return response.json().then(x => [x]);\n    })\n  }\n\n\n  Store.prototype.default_findHeatmapType = Store.prototype.findHeatmapType;\n  Store.prototype.findHeatmapType = function(slide, name) {\n    var suffix = \"Heatmap/types\"\n    var url = this.base + suffix;\n    var query = {}\n    if (this.subject_id) {\n      query.subject = this.subject_id\n    }\n    if (this.case_id) {\n      query.case = this.case_id\n      query.slide = this.case_id\n    } else {\n      query.case = this.slideId\n      query.slide = this.slideId\n    }\n\n    return fetch(url + \"?\" + objToParamStr(query), {\n      credentials: \"include\",\n      mode: \"cors\"\n    }).then(this.errorHandler).then(x=>this.filterBroken(x, \"heatmap\"))\n\n  };\n\n  Store.prototype.default_findHeatmap = Store.prototype.findHeatmap;\n  Store.prototype.findHeatmap = function(slide, name) {\n    var suffix = \"Heatmap/find\"\n    var url = this.base + suffix;\n    var query = {}\n\n    if (this.subject_id) {\n      query.subject = this.subject_id\n    }\n    if (this.case_id) {\n      query.case = this.case_id\n      query.slide = this.case_id\n    } else {\n      query.case = this.slideId\n      query.slide = this.slideId\n    }\n    if(name) query.name = name;\n\n    return fetch(url + \"?\" + objToParamStr(query), {\n      credentials: \"include\",\n      mode: \"cors\"\n    }).then(this.errorHandler).then(x=>this.filterBroken(x, \"heatmap\"))\n  };\n  Store.prototype.default_getHeatmap = Store.prototype.getHeatmap;\n  Store.prototype.getHeatmap = function(slide, exec) {\n    var suffix = \"Heatmap/get\"\n    var url = this.base + suffix;\n    var query = {}\n    if (this.subject_id) {\n      query.subject = this.subject_id\n    }\n    if (this.case_id) {\n      query.case = this.case_id\n    } else {\n      query.case = this.slideId\n    }\n    if(exec) query.exec = exec;\n\n    return fetch(url + \"?\" + objToParamStr(query), {\n      credentials: \"include\",\n      mode: \"cors\"\n    }).then(this.errorHandler).then(x=>this.filterBroken(x, \"heatmap\"))\n  };\n\n  StatesHelper.prototype.default_getCurrentStatesURL = StatesHelper.prototype.getCurrentStatesURL;\n  getCurrentStatesURL = function(isImageCoordinate=false){\n    let states = StatesHelper.getCurrentStates(isImageCoordinate);\n    if(!states)return;\n    console.log(states);\n    states = StatesHelper.encodeStates(states);\n    return `${location.origin}${location.pathname}?slideId=${$D.params.slideId}&states=${$D.params.states}&mode=${$D.params.mode}`\n  };\n\n\n  CaMic.prototype.default_loadImg = CaMic.prototype.loadImg\n  CaMic.prototype.loadImg = function(func) {\n    var urlParams = new URLSearchParams(window.location.search);\n    var pathdb_id = urlParams.get('slideId');\n    this.slideId = pathdb_id // default value\n    this.slideName = pathdb_id\n    this.study = \"\"\n    this.specimen = \"\"\n    this.subject_id = \"\"\n    this.case_id = \"\"\n    this.image_id = \"\"\n    this.study_id = \"\"\n    this.store.getSlide(pathdb_id).then(data => {\n      data = data[0]\n      console.log(data)\n      // set mpp\n      this.mpp = 1e9\n\n      if (data.field_mpp_y && data.field_mpp_y.length >= 1) {\n        this.mpp_y = data.field_mpp_y[0].value\n        this.mpp = this.mpp_y\n      }\n      if (data.field_mpp_x && data.field_mpp_x.length >= 1) {\n        this.mpp_x = data.field_mpp_x[0].value\n        this.mpp = this.mpp_x\n      }\n      if (data.referencepixelphysicalvaluey && data.referencepixelphysicalvaluey.length >=1){\n        this.mpp_y = data.referencepixelphysicalvaluey[0]\n        this.mpp = this.mpp_y\n      }\n      if (data.referencepixelphysicalvaluex && data.referencepixelphysicalvaluex.length >=1){\n        this.mpp_x = data.referencepixelphysicalvaluex[0]\n        this.mpp = this.mpp_x\n      }\n      // identifier fields\n      if(data.field_subject_id && data.field_subject_id.length >= 1){\n        this.subject_id = data.field_subject_id[0].value\n      }\n      if(data.field_case_id && data.field_case_id.length >= 1){\n        this.case_id = data.field_case_id[0].value\n      }\n      if(data.field_image_id){\n        this.image_id = data.field_image_id[0].value\n      }\n      if(data.field_study_id){\n        this.study_id = data.field_study_id[0].value\n      }\n\n      if (data.field_iip_path && data.field_iip_path.length >= 1) {\n        this.location = data.field_iip_path[0].value\n        // MAKE URL FOR IIP\n        this.url = \"../../img/IIP/raw/?DeepZoom=\" + this.location + \".dzi\"\n        this.viewer.open(this.url);\n      } else {\n        throw \"No image location --could be token\"\n      }\n\n      this.viewer.mpp = this.mpp;\n      this.viewer.mpp_x = this.mpp_x;\n      this.viewer.mpp_y = this.mpp_y;\n\n      //set scalebar\n      if (this.mpp && this.mpp != 1e9) this.createScalebar(this.mpp)\n      var imagingHelper = new OpenSeadragonImaging.ImagingHelper({\n        viewer: this.viewer\n      });\n      imagingHelper.setMaxZoom(1);\n      // create item to pass to the callback function, previously x[0] (slide data)\n      let x = {}\n      x['_id'] = this.slideId\n      x.name = this.slideName\n\n      // identifier field\n      x.subject_id = this.subject_id\n      x.case_id = this.case_id\n      x.image_id = this.image_id\n      x.study_id = this.study_id\n\n      x.study = this.study\n      x.specimen = this.specimen\n      x.mpp = this.mpp;\n      x.mpp_x = this.mpp_x;\n      x.mpp_y = this.mpp_y;\n      x.location = this.location;\n      x.url = this.url;\n      if (func && typeof func === 'function') {\n        func.call(null, x);\n      }\n      Loading.text.textContent = `Loading Slide's Tiles...`;\n      // we may want another init.js or our own callback\n    }).catch(e => {\n      console.error(e)\n      Loading.text.textContent = \"ERROR - PathDB Image Error (Try A Refresh)\"\n      //if(func && typeof func === 'function') func.call(null,{hasError:true,message:e});\n    })\n\n  }\n}\n\n\nPathDbMods()\nconsole.warn(\"This Setup Is Intended For Pathdb\")\n"]}