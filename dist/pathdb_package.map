{"version":3,"sources":["pathdb_package.js"],"names":["PathDbMods","getCookie","key","cookiestring","RegExp","exec","document","cookie","decodeURIComponent","toString","replace","then","x","json","log","hasOwnProperty","token","warn","prototype","default_findMark","Store","findMark","slide","name","specimen","study","footprint","source","x0","x1","y0","y1","url","base","query","bySlide","fetch","objToParamStr","auth","errorHandler","filterBroken","getMarkByIds","ids","Array","isArray","suffix","stringifiedIds","map","id","join","findMarkTypes","default_findSlide","findSlide","location","Headers","response","ok","statusText","default_getSlide","getSlide","default_loadImg","CaMic","loadImg","func","slideId","URLSearchParams","window","search","get","slideName","store","data","mpp","field_mpp_y","length","mpp_y","value","field_mpp_x","mpp_x","field_iip_path","viewer","open","createScalebar","OpenSeadragonImaging","ImagingHelper","setMaxZoom","call","text","textContent","catch","error","e","console"],"mappings":";AAAA,SAASA,IAeEC,SAAAA,EAAUC,GACbC,IAAAA,EAAeC,OAAYF,EAAM,SAASG,KAAKC,SAASC,QACrDC,OAAAA,mBAAqBL,EAAeA,EAAaM,WAAWC,QAAQ,UAAW,IAAM,IAfxF,MAAA,qCAAsC,CAClC,OAAA,MACK,YAAA,YACZC,KAAK,SAAA,GAAKC,OAAAA,EAAEC,SAAQF,KAAK,SAAK,GACvBG,QAAAA,IAAIF,GACRA,EAAEG,eAAe,UAAYH,EAAEI,QACxBT,SAAAA,OAAS,SAAWK,EAAEI,MAAQ,OAWnCC,QAAAA,KAAK,yBACPC,MAAAA,UAAUC,iBAAmBC,MAAMF,UAAUG,SAC7CH,MAAAA,UAAUG,SAAW,SAASC,EAAOC,EAAMC,EAAUC,EAAOC,EAAWC,EAAQC,EAAIC,EAAIC,EAAIC,GAAI,IAAA,EAAA,KAE/FC,EAAM,KAAKC,KADF,YAETC,EAAQ,GAuCLC,OArCHb,IACIA,EAAAA,MAAQA,GAEZC,IACIA,EAAAA,KAAOA,GAEXC,IACIA,EAAAA,SAAWA,GAEfC,IACIA,EAAAA,MAAQA,GAEZC,IACIA,EAAAA,UAAYA,GAEhBC,IACIA,EAAAA,OAASA,GAEbC,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAECK,MAAMJ,EAAM,IAAMK,cAAcH,GAAQ,CACvC,YAAA,cACJ,QAAA,CACU,cAAA,KAAKI,MAElB,KAAA,SACL3B,KAAK,KAAK4B,cAAc5B,KAAK,SAAA,GAAK,OAAA,EAAK6B,aAAa5B,EAAG,WAGtDM,MAAAA,UAAUuB,aAAe,SAASC,EAAKpB,EAAOG,EAAOD,EAAUG,EAAQD,EAAWE,EAAIC,EAAIC,EAAIC,GAAI,IAAA,EAAA,KAClG,IAACY,MAAMC,QAAQF,KAASpB,EACnB,MAAA,CACK,UAAA,EACD,QAAA,oBAITuB,IACAb,EAAM,KAAKC,KADF,aAETC,EAAQ,GACRY,EAAiBJ,EAAIK,IAAI,SAAA,GAAUC,MAAAA,IAAAA,EAAV,MAAiBC,KAAK,KAkC5Cd,OAjCDZ,EAAAA,KAAWuB,IAAAA,EAAjB,IACMxB,EAAAA,MAAQA,EACVG,IACIA,EAAAA,MAAQA,GAEZD,IACIA,EAAAA,SAAWA,GAEfG,IACIA,EAAAA,OAASA,GAEbD,IACIA,EAAAA,UAAYA,GAEhBE,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAETC,IACIA,EAAAA,GAAKA,GAECK,MAAMJ,EAAM,IAAMK,cAAcH,GAAQ,CACvC,YAAA,cACJ,QAAA,CACU,cAAA,KAAKI,MAElB,KAAA,SACL3B,KAAK,KAAK4B,cAAc5B,KAAK,SAAA,GAAK,OAAA,EAAK6B,aAAa5B,EAAG,WAGtDM,MAAAA,UAAUgC,cAAgB,SAAS5B,EAAOC,GAC1CsB,IACAb,EAAM,KAAKC,KADF,aAETC,EAAQ,GAeLC,OAbHZ,IACIA,EAAAA,KAAOA,GAEXD,IACIA,EAAAA,MAAQA,GAEFc,MAAMJ,EAAM,IAAMK,cAAcH,GAAQ,CACvC,YAAA,cACJ,QAAA,CACU,cAAA,KAAKI,MAElB,KAAA,SACL3B,KAAK,KAAK4B,eAGTrB,MAAAA,UAAUiC,kBAAoB/B,MAAMF,UAAUkC,UAC9ClC,MAAAA,UAAUkC,UAAY,SAAS9B,EAAOE,EAAUC,EAAO4B,GAEpDjB,OAAAA,MADG,2BAA6Bd,EAAQ,gBAC7B,CACV,KAAA,OACG,QAAA,IAAIgC,QAAQ,CACF,cAAA,UAAYrD,EAAU,aAExCU,KAAK,SAAS4C,GACX,OAACA,EAASC,GAKPD,EAAS1C,OAAOF,KAAK,SAAA,GAAK,MAAA,CAACC,KALT,CAChB,OAAC2C,EAASC,GACXD,KAAAA,EAASE,WACVF,IAAAA,EAASvB,QAKdd,MAAAA,UAAUwC,iBAAmBtC,MAAMF,UAAUyC,SAC7CzC,MAAAA,UAAUyC,SAAW,SAASX,GAE3BZ,OAAAA,MADG,2BAA6BY,EAAK,gBAC1B,CACV,KAAA,OACG,QAAA,IAAIM,QAAQ,CACF,cAAA,UAAYrD,EAAU,aAExCU,KAAK,SAAS4C,GACX,OAACA,EAASC,GAKPD,EAAS1C,OAAOF,KAAK,SAAA,GAAK,MAAA,CAACC,KALT,CAChB,OAAC2C,EAASC,GACXD,KAAAA,EAASE,WACVF,IAAAA,EAASvB,QAKdd,MAAAA,UAAU0C,gBAAkBC,MAAM3C,UAAU4C,QAC5C5C,MAAAA,UAAU4C,QAAU,SAASC,GAAM,IAAA,EAAA,KAGnCC,EAFY,IAAIC,gBAAgBC,OAAOb,SAASc,QAC7BC,IAAI,WAEtBJ,KAAAA,QAAUA,EACVK,KAAAA,UAAYL,EACZvC,KAAAA,MAAQ,GACRD,KAAAA,SAAW,GACX8C,KAAAA,MAAMX,SAASK,GAASrD,KAAK,SAAQ,GAapC4D,GAZGA,EAAAA,EAAK,GACJzD,QAAAA,IAAIyD,GAEPC,EAAAA,IAAM,IACPD,EAAKE,aAAeF,EAAKE,YAAYC,QAAU,IAC5CC,EAAAA,MAAQJ,EAAKE,YAAY,GAAGG,MAC5BJ,EAAAA,IAAM,EAAKG,OAEdJ,EAAKM,aAAeN,EAAKM,YAAYH,QAAU,IAC5CI,EAAAA,MAAQP,EAAKM,YAAY,GAAGD,MAC5BJ,EAAAA,IAAM,EAAKM,SAEdP,EAAKQ,gBAAkBR,EAAKQ,eAAeL,QAAU,GAMjD,KAAA,qCALDrB,EAAAA,SAAWkB,EAAKQ,eAAe,GAAGH,MAElC5C,EAAAA,IAAM,+BAAiC,EAAKqB,SAAW,OACvD2B,EAAAA,OAAOC,KAAK,EAAKjD,KAKnBgD,EAAAA,OAAOR,IAAM,EAAKA,IAClBQ,EAAAA,OAAOF,MAAQ,EAAKA,MACpBE,EAAAA,OAAOL,MAAQ,EAAKA,MAGrB,EAAKH,KAAmB,KAAZ,EAAKA,KAAY,EAAKU,eAAe,EAAKV,KACtC,IAAIW,qBAAqBC,cAAc,CACjD,OAAA,EAAKJ,SAEDK,WAAW,GAErBzE,IAAAA,EAAI,GACN,EAAF,IAAW,EAAKoD,QACdzC,EAAAA,KAAO,EAAK8C,UACZ5C,EAAAA,MAAQ,EAAKA,MACbD,EAAAA,SAAW,EAAKA,SAChBgD,EAAAA,IAAM,EAAKA,IACXM,EAAAA,MAAQ,EAAKA,MACbH,EAAAA,MAAQ,EAAKA,MACbtB,EAAAA,SAAW,EAAKA,SAChBrB,EAAAA,IAAM,EAAKA,IACT+B,GAAwB,mBAATA,GACZuB,EAAAA,KAAK,KAAM1E,GAEV2E,QAAAA,KAAKC,YAAb,6BAECC,MAAM,SAAK,GACJC,QAAAA,MAAMC,GACNJ,QAAAA,KAAKC,YAAc,gDAQjCxF,IACA4F,QAAQ3E,KAAK","file":"pathdb_package.map","sourceRoot":"../package","sourcesContent":["function PathDbMods() {\n  // put the auth jwt in cookie as token\n  fetch(\"../../pathdb/slide/unmod/jwt/token\", {\n    method: 'GET',\n    credentials: 'include'\n  }).then(x => x.json()).then(x => {\n    console.log(x)\n    if (x.hasOwnProperty('token') && x.token) {\n      document.cookie = \"token=\" + x.token + \";\"\n    }\n  })\n  /**\n  Gets a named cookie value\n  * @param {string} key - the key to get from the cookie\n  **/\n  function getCookie(key) {\n    var cookiestring = RegExp(\"\" + key + \"[^;]+\").exec(document.cookie);\n    return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\");\n  }\n  console.warn(\"{PathDB mods enabled}\")\n  Store.prototype.default_findMark = Store.prototype.findMark\n  Store.prototype.findMark = function(slide, name, specimen, study, footprint, source, x0, x1, y0, y1) {\n    var suffix = \"Mark/find\"\n    var url = this.base + suffix;\n    var query = {}\n    var bySlideId\n    if (slide) {\n      query.slide = slide\n    }\n    if (name) {\n      query.name = name\n    }\n    if (specimen) {\n      query.specimen = specimen\n    }\n    if (study) {\n      query.study = study\n    }\n    if (footprint) {\n      query.footprint = footprint\n    }\n    if (source) {\n      query.source = source\n    }\n    if (x0) {\n      query.x0 = x0;\n    }\n    if (x1) {\n      query.x1 = x1;\n    }\n    if (y0) {\n      query.y0 = y0;\n    }\n    if (y1) {\n      query.y1 = y1;\n    }\n    let bySlide = fetch(url + \"?\" + objToParamStr(query), {\n      credentials: \"same-origin\",\n      headers: {\n        'Authorization': this.auth\n      },\n      mode: \"cors\"\n    }).then(this.errorHandler).then(x => this.filterBroken(x, \"mark\"))\n    return bySlide\n  }\n  Store.prototype.getMarkByIds = function(ids, slide, study, specimen, source, footprint, x0, x1, y0, y1) {\n    if (!Array.isArray(ids) || !slide) {\n      return {\n        hasError: true,\n        message: 'args are illegal'\n      }\n    }\n    var bySlideId\n    var suffix = \"Mark/multi\"\n    var url = this.base + suffix;\n    var query = {}\n    var stringifiedIds = ids.map(id => `\"${id}\"`).join(',');\n    query.name = `[${stringifiedIds}]`;\n    query.slide = slide;\n    if (study) {\n      query.study = study;\n    }\n    if (specimen) {\n      query.specimen = specimen;\n    }\n    if (source) {\n      query.source = source;\n    }\n    if (footprint) {\n      query.footprint = footprint;\n    }\n    if (x0) {\n      query.x0 = x0;\n    }\n    if (x1) {\n      query.x1 = x1;\n    }\n    if (y0) {\n      query.y0 = y0;\n    }\n    if (y1) {\n      query.y1 = y1;\n    }\n    let bySlide = fetch(url + \"?\" + objToParamStr(query), {\n      credentials: \"same-origin\",\n      headers: {\n        'Authorization': this.auth\n      },\n      mode: \"cors\"\n    }).then(this.errorHandler).then(x => this.filterBroken(x, \"mark\"))\n    return bySlide\n  }\n  Store.prototype.findMarkTypes = function(slide, name) {\n    var suffix = \"Mark/types\"\n    var url = this.base + suffix;\n    var query = {}\n    var bySlideId\n    if (name) {\n      query.name = name\n    }\n    if (slide) {\n      query.slide = slide\n    }\n    let bySlide = fetch(url + \"?\" + objToParamStr(query), {\n      credentials: \"same-origin\",\n      headers: {\n        'Authorization': this.auth\n      },\n      mode: \"cors\"\n    }).then(this.errorHandler)\n    return bySlide\n  }\n  Store.prototype.default_findSlide = Store.prototype.findSlide;\n  Store.prototype.findSlide = function(slide, specimen, study, location) {\n    var url = \"../../pathdb/slide/info/\" + slide + \"?_format=json\"\n    return fetch(url, {\n      mode: \"cors\",\n      headers: new Headers({\n        'Authorization': 'Bearer ' + getCookie(\"token\"),\n      })\n    }).then(function(response) {\n      if (!response.ok) return {\n        error: !response.ok,\n        text: response.statusText,\n        url: response.url\n      };\n      return response.json().then(x => [x]);\n    })\n  }\n  Store.prototype.default_getSlide = Store.prototype.getSlide\n  Store.prototype.getSlide = function(id) {\n    var url = \"../../pathdb/slide/info/\" + id + \"?_format=json\"\n    return fetch(url, {\n      mode: \"cors\",\n      headers: new Headers({\n        'Authorization': 'Bearer ' + getCookie(\"token\"),\n      })\n    }).then(function(response) {\n      if (!response.ok) return {\n        error: !response.ok,\n        text: response.statusText,\n        url: response.url\n      };\n      return response.json().then(x => [x]);\n    })\n  }\n  CaMic.prototype.default_loadImg = CaMic.prototype.loadImg\n  CaMic.prototype.loadImg = function(func) {\n    var urlParams = new URLSearchParams(window.location.search);\n    var img_id = urlParams.get('slideId');\n    let slideId = img_id\n    this.slideId = slideId\n    this.slideName = slideId\n    this.study = \"\"\n    this.specimen = \"\"\n    this.store.getSlide(slideId).then(data => {\n      data = data[0]\n      console.log(data)\n      // set mpp\n      this.mpp = 1e9\n      if (data.field_mpp_y && data.field_mpp_y.length >= 1) {\n        this.mpp_y = data.field_mpp_y[0].value\n        this.mpp = this.mpp_y\n      }\n      if (data.field_mpp_x && data.field_mpp_x.length >= 1) {\n        this.mpp_x = data.field_mpp_x[0].value\n        this.mpp = this.mpp_x\n      }\n      if (data.field_iip_path && data.field_iip_path.length >= 1) {\n        this.location = data.field_iip_path[0].value\n        // MAKE URL FOR IIP\n        this.url = \"../../img/IIP/raw/?DeepZoom=\" + this.location + \".dzi\"\n        this.viewer.open(this.url);\n      } else {\n        throw \"No image location --could be token\"\n      }\n\n      this.viewer.mpp = this.mpp;\n      this.viewer.mpp_x = this.mpp_x;\n      this.viewer.mpp_y = this.mpp_y;\n\n      //set scalebar\n      if (this.mpp && this.mpp != 1e9) this.createScalebar(this.mpp)\n      var imagingHelper = new OpenSeadragonImaging.ImagingHelper({\n        viewer: this.viewer\n      });\n      imagingHelper.setMaxZoom(1);\n      // create item to pass to the callback function, previously x[0] (slide data)\n      let x = {}\n      x['_id'] = this.slideId\n      x.name = this.slideName\n      x.study = this.study\n      x.specimen = this.specimen\n      x.mpp = this.mpp;\n      x.mpp_x = this.mpp_x;\n      x.mpp_y = this.mpp_y;\n      x.location = this.location;\n      x.url = this.url;\n      if (func && typeof func === 'function') {\n        func.call(null, x);\n      }\n      Loading.text.textContent = `loading slide's tiles...`;\n      // we may want another init.js or our own callback\n    }).catch(e => {\n      console.error(e)\n      Loading.text.textContent = \"ERROR - PathDB Image Error (Try a refresh)\"\n      //if(func && typeof func === 'function') func.call(null,{hasError:true,message:e});\n    })\n\n  }\n}\n\n\nPathDbMods()\nconsole.warn(\"This setup is intended for pathdb\")\n"]}