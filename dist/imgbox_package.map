{"version":3,"sources":["LocalStore.js","ImgBoxMods.js","imgbox_package.js"],"names":["init_LocalStore","findInLocalStorage","type","query","data","JSON","parse","window","localStorage","getItem","filter","matching","i","Object","byString","x","getInLocalStorage","id","putInLocalStorage","newData","push","setItem","stringify","removeFromLocalStorage","log","length","warn","o","s","a","replace","split","n","k","prototype","findMarkTypes","slide","name","Promise","res","rej","unique","Set","map","findMark","specimen","study","footprint","source","x0","x1","y0","y1","getMarkByIds","ids","getMark","addMark","json","Date","now","deleteMark","findHeatmap","getHeatmap","addHeatmap","deleteHeatmap","export","import","findSlide","location","slideId","URLSearchParams","document","search","substring","get","getSlide","params","local_dummy","findTemplate","getTemplate","DownloadMarksToFile","$D","decodeURIComponent","text","element","createElement","blob","Blob","uri","URL","createObjectURL","setAttribute","style","display","body","appendChild","click","removeChild","LoadMarksFromFile","onchange","event","input","target","reader","FileReader","onload","result","forEach","provenance","image","data2","concat","reload","e","error","readAsText","files","defaultTemplate","template_data","ImgBoxMods","default_loadImg","CaMic","loadImg","func","p","slideName","then","response","status","imbox_source","height","width","viewer","open","mpp","createScalebar","OpenSeadragonImaging","ImagingHelper","setMaxZoom","url","call","textContent","catch","console"],"mappings":"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","file":"imgbox_package.map","sourceRoot":"../package","sourcesContent":["// overwrite store with equivalent local functions\nfunction init_LocalStore(){\n  // requirements\n  console.warn(\"{localstore mods enabled}\")\n  Object.byString = function(o, s) {\n      s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n      s = s.replace(/^\\./, '');           // strip a leading dot\n      var a = s.split('.');\n      for (var i = 0, n = a.length; i < n; ++i) {\n          var k = a[i];\n          if (k in o) {\n              o = o[k];\n          } else {\n              return;\n          }\n      }\n      return o;\n  }\n\n  function findInLocalStorage(type, query){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    if (data){\n      return data.filter(x=>{\n        let matching = true;\n        for (var i in query){\n          matching = matching && Object.byString(x, i) == query[i]\n        }\n        return matching\n      })\n    } else {\n      return []\n    }\n\n  }\n\n  function getInLocalStorage(type, id){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    if (data){\n      return data.filter(x=>x['_id'] == id)[0]\n    } else {\n      return {}\n    }\n\n  }\n\n  function putInLocalStorage(type, newData){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    data = data || []\n    data.push(newData)\n    window.localStorage.setItem(type, JSON.stringify(data))\n    return newData\n  }\n\n  function removeFromLocalStorage(type, id){\n    console.log(id)\n    let data = JSON.parse(window.localStorage.getItem(type))\n    data = data || []\n    let newData = data.filter(x=>x['_id']['$oid'] !== id)\n    window.localStorage.setItem(type, JSON.stringify(newData))\n    console.log(data.length - newData.length)\n    return {'rowsAffected': data.length - newData.length}\n  }\n\n\n  // replace impacted store functionality.\n  Store.prototype.findMarkTypes = function(slide, name){\n    return new Promise(function(res, rej){\n      let query={}\n      if(name){\n        query['provenance.analysis.execution_id']= name\n      }\n      if(slide){\n        query['provenance.image.slide'] = slide\n      }\n      let data = findInLocalStorage(\"mark\", query)\n      if (data){\n        const unique = [...new Set(data.map(x => Object.byString(x,'provenance')))];\n        res(unique)\n      } else {\n        res([])\n      }\n\n      // TODO!!!\n    })\n  }\n  Store.prototype.findMark = function(slide, name, specimen, study, footprint, source, x0, x1, y0, y1){\n    return new Promise(function(res, rej){\n      let query = {}\n      if (name){\n        query['provenance.image.slide'] = slide\n      }\n      if(slide){\n        query['provenance.analysis.execution_id']= name\n      }\n      if(source){\n        query['provenance.analysis.source']= source\n      }\n      if(specimen){\n        query['provenance.image.specimen'] = specimen\n      }\n      if(study){\n        query['provenance.image.study'] = study\n      }\n      res(findInLocalStorage('mark', query))\n    })\n  }\n  Store.prototype.getMarkByIds = function(ids, slide, study, specimen, source, footprint, x0, x1, y0, y1){\n    return new Promise(function(res, rej){\n      let data = []\n      for (var i in ids){\n        data.push(...findInLocalStorage('mark', {'provenance.analysis.execution_id': ids[i], 'provenance.image.slide': slide}))\n      }\n      res(data)\n    })\n  }\n  Store.prototype.getMark = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"mark\", id))\n    })\n  }\n  Store.prototype.addMark = function(json){\n    return new Promise(function(res, rej){\n      // give it an that's probably semi-unique\n      json['_id'] = json['_id'] || {'$oid': Date.now()}\n      res(putInLocalStorage('mark', json))\n    })\n  }\n  Store.prototype.deleteMark = function(id, slide){\n    return new Promise((res, rej)=>{\n      res(removeFromLocalStorage('mark', id))\n    })\n  }\n  Store.prototype.findHeatmap = function(slide, name){\n    return new Promise(function(res, rej){\n      let query = {}\n      if (name){\n        query['provenance.image.slide'] = slide\n      }\n      if(slide){\n        query['provenance.analysis.execution_id']= name\n      }\n      res(findInLocalStorage('heatmap', query))\n    })\n  }\n  Store.prototype.getHeatmap = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"heatmap\", id))\n    })\n  }\n  Store.prototype.addHeatmap = function(json){\n    // give it an that's probably semi-unique\n    json['_id'] = json['_id'] || Date.now()\n    return new Promise(function(res, rej){\n      res(putInLocalStorage('heatmap', json))\n    })\n  }\n  Store.prototype.deleteHeatmap = function(id,slide){\n    return new Promise(function(res, rej){\n      res(removeFromLocalStorage('heatmap', id))\n    })\n  }\n\n  // import and export functions\n  Store.prototype.export = function(type){\n    return new Promise(function(res, rej){\n      res(window.localStorage.getItem(type))\n    })\n  }\n  // NOTE -- overwrites\n  Store.prototype.import = function(type, data){\n    return new Promise(function(res, rej){\n      res(window.localStorage.setItem(type, data))\n    })\n  }\n  Store.prototype.findSlide = function(slide, specimen, study, location){\n    return new Promise(function(res, rej){\n      let params = new URLSearchParams(document.location.search.substring(1));\n      let slideId = params.get(\"id\") || \"local\";\n      let local_dummy = {\n        'id': slideId,\n        'mpp': '0.001',\n        'study':\"\",\n        'specimen':\"\"\n      }\n      res([local_dummy])\n    })\n  }\n  Store.prototype.getSlide = function(id){\n    return new Promise(function(res, rej){\n      let params = new URLSearchParams(document.location.search.substring(1));\n      let slideId = params.get(\"id\") || \"local\";\n      console.log(params)\n      let local_dummy = {\n        'id': slideId,\n        'mpp': '0.001',\n        'study':\"\",\n        'specimen':\"\"\n      }\n      res(local_dummy)\n    })\n  }\n  Store.prototype.findTemplate = function(name,type){\n    let query = {}\n    if (name){\n      query.name = name\n    }\n    if (type){\n      query.type = type\n    }\n    return new Promise(function(res, rej){\n      res(findInLocalStorage(\"template\", query))\n    })\n  }\n  Store.prototype.getTemplate = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"template\", id))\n    })\n  }\n  Store.prototype.DownloadMarksToFile = function(){\n      // downloads marks for the current slide only\n      // make the browser download it\n      let slide = $D.params.id // portable?\n      slide = decodeURIComponent(slide) // fix for url fix\n      let query = {}\n      query['provenance.image.slide'] = slide\n      let data = JSON.parse(window.localStorage.getItem(\"mark\"))\n      let text = \"\"\n      if (data) {\n        text = JSON.stringify(data.filter(x => {\n          let matching = true;\n          for (var i in query) {\n            matching = matching && Object.byString(x, i) == query[i]\n          }\n          return matching\n        }))\n      }\n      var element = document.createElement('a');\n      var blob = new Blob([text], {type: \"application/json\"});\n      var uri = URL.createObjectURL(blob);\n      element.setAttribute('href', uri);\n      element.setAttribute('download', \"markups.json\");\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n  }\n  Store.prototype.LoadMarksFromFile = function(){\n    // loads marks for the current slide only, without replacement\n    // open a file selector\n    let slide = $D.params.id\n    slide = decodeURIComponent(slide)\n    var element = document.createElement('input');\n    document.body.appendChild(element);\n    element.setAttribute('type', \"file\")\n    element.style.display = 'position: fixed; top: -100em';\n    element.onchange = function(event) {\n      var input = event.target;\n      var reader = new FileReader();\n      reader.onload = function() {\n        var text = reader.result;\n        try {\n          let data = JSON.parse(text)\n          console.log(data)\n          data.forEach(x => {\n            x.provenance.image.slide = slide\n          })\n          let data2 = JSON.parse(window.localStorage.getItem(\"mark\"))\n          data2 = data2 || []\n          data2 = data2.concat(data)\n          console.log(data2)\n          window.localStorage.setItem(\"mark\", JSON.stringify(data2))\n          window.location.reload()\n        } catch (e) {\n          console.error(e)\n        }\n        console.log(text.substring(0, 200));\n      };\n      reader.readAsText(input.files[0]);\n    };\n\n    element.click();\n    document.body.removeChild(element);\n  }\n}\n\n// default template\nlet defaultTemplate = {\n    \"_id\": \"0\",\n    \"type\": \"object\",\n    \"id\": \"annotation-form\",\n    \"name\": \"AnnotSchema\",\n    \"description\": \"\",\n    \"links\": [],\n    \"additionalProperties\": false,\n    \"properties\": {\n        \"name\": {\n            \"id\": \"a0\",\n            \"title\": \"Identity Name\",\n            \"type\": \"string\",\n            \"required\": true,\n            \"description\": \"note name\"\n            },\"notes\": {\n            \"id\": \"a1\",\n            \"title\": \"Notes: \",\n            \"type\": \"string\",\n            \"format\":\"textarea\",\n            \"maxLength\": 128\n        }\n    }\n}\n// if no template, add our default\nlet template_data = JSON.parse(window.localStorage.getItem(\"template\"))\nif (!template_data){\n  template_data=[];\n  template_data.push(defaultTemplate)\n  window.localStorage.setItem(\"template\", JSON.stringify(template_data))\n}\n\n\nexport default init_LocalStore\n","function ImgBoxMods() {\n  console.warn(\"{imgbox mods enabled}\")\n  CaMic.prototype.default_loadImg = CaMic.prototype.loadImg\n  CaMic.prototype.loadImg = function(func) {\n    var urlParams = new URLSearchParams(window.location.search);\n    var p = urlParams.get('id');\n    console.log(\"image ID : \" + p);\n    let slideId = p\n    this.slideId = slideId\n    this.slideName = slideId\n    this.study = \"\"\n    this.specimen = \"\"\n    fetch(p + \"/info.json\").then(response => {\n      if (response.status >=400){\n        throw response;\n      } else {\n        return response.json();\n      }\n    }).then(data => {\n      let imbox_source = {\n        \"@context\": \"http://iiif.io/api/image/2/context.json\",\n        //\"@id\": \"/iiif?iri=https://s3.amazonaws.com/ebremeribox/TCGA-02-0001-01C-01-BS1.0cc8ca55-d024-440c-a4f0-01cf5b3af861.svs\",\n        \"@id\": p,\n        \"height\": data.height,\n        \"width\": data.width,\n        \"profile\": [\"http://iiif.io/api/image/2/level2.json\"],\n        \"protocol\": \"http://iiif.io/api/image\",\n        \"tiles\": [{\n          \"scaleFactors\": [1, 2, 4, 8, 16, 32],\n          \"width\": 256\n        }]\n      }\n      this.viewer.open(imbox_source);\n      //set scalebar\n      this.mpp = data['mpp-x'] || data['mpp-y'] || 1\n      this.createScalebar(this.mpp)\n      var imagingHelper = new OpenSeadragonImaging.ImagingHelper({\n        viewer: this.viewer\n      });\n      imagingHelper.setMaxZoom(1);\n      // create item to pass to the callback function, previously x[0] (slide data)\n      let x = {}\n      x['_id'] = \"0\"\n      x.name = this.slideName\n      x.study = this.study\n      x.specimen = this.specimen\n      x.mpp = 1;\n      x.location = p;\n      x.url = imbox_source\n      console.log(func)\n      console.log(x)\n      if (func && typeof func === 'function'){\n        func.call(null, x);\n      }\n      Loading.text.textContent = `loading slide's tiles...`;\n      // WARN; note that spyglass isn't working due to semi-hardcoded value at init.js line 140\n      // we may want another init.js or our own callback\n    }).catch(e=>{\n      console.error(e)\n      Loading.text.textContent = \"ERROR - Slide May be Broken or Unsupported\"\n      //if(func && typeof func === 'function') func.call(null,{hasError:true,message:e});\n    })\n\n  }\n}\n\n\nexport default ImgBoxMods\n","import init_LocalStore from './LocalStore.js'\nimport ImgBoxMods from './ImgBoxMods.js'\n\ninit_LocalStore()\nImgBoxMods()\nconsole.warn(\"This setup is intended for imagebox\")\n// parcel build package/imgbox_package.js\n"]}