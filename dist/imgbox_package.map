{"version":3,"sources":["LocalStore.js","ImgBoxMods.js","imgbox_package.js"],"names":["init_LocalStore","findInLocalStorage","type","query","data","JSON","parse","window","localStorage","getItem","filter","x","matching","i","Object","byString","getInLocalStorage","id","putInLocalStorage","newData","push","setItem","stringify","removeFromLocalStorage","console","log","length","warn","o","s","a","replace","split","n","k","Store","prototype","validation","filterBroken","b","findMarkTypes","slide","name","Promise","res","rej","Set","map","findMark","specimen","study","footprint","source","x0","x1","y0","y1","then","getMarkByIds","ids","getMark","addMark","json","mark","errors","Date","now","deleteMark","findHeatmap","getHeatmap","addHeatmap","heatmap","deleteHeatmap","export","import","findSlide","location","slideId","URLSearchParams","document","search","substring","get","getSlide","params","findTemplate","getTemplate","DownloadMarksToFile","$D","decodeURIComponent","text","element","createElement","blob","Blob","uri","URL","createObjectURL","setAttribute","style","display","body","appendChild","click","removeChild","LoadMarksFromFile","onchange","event","input","target","reader","FileReader","onload","result","forEach","provenance","image","$VALIDATION","data2","concat","error","reload","e","readAsText","files","defaultTemplate","template_data","ImgBoxMods","CaMic","default_loadImg","loadImg","func","img_id","slideName","fetch","response","status","tile_count","Math","ceil","log2","max","height","width","scaleFactors","imbox_source","viewer","open","mpp_x","mpp_y","mpp","createScalebar","OpenSeadragonImaging","ImagingHelper","setMaxZoom","url","call","Loading","textContent","catch"],"mappings":"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","file":"imgbox_package.map","sourceRoot":"../package","sourcesContent":["// overwrite store with equivalent local functions\nfunction init_LocalStore(){\n  // requirements\n  console.warn(\"{localstore mods enabled}\")\n  Object.byString = function(o, s) {\n      s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n      s = s.replace(/^\\./, '');           // strip a leading dot\n      var a = s.split('.');\n      for (var i = 0, n = a.length; i < n; ++i) {\n          var k = a[i];\n          if (k in o) {\n              o = o[k];\n          } else {\n              return;\n          }\n      }\n      return o;\n  }\n\n  function findInLocalStorage(type, query){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    if (data){\n      return data.filter(x=>{\n        let matching = true;\n        for (var i in query){\n          matching = matching && Object.byString(x, i) == query[i]\n        }\n        return matching\n      })\n    } else {\n      return []\n    }\n\n  }\n\n  function getInLocalStorage(type, id){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    if (data){\n      return data.filter(x=>x['_id'] == id)[0]\n    } else {\n      return {}\n    }\n\n  }\n\n  function putInLocalStorage(type, newData){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    data = data || []\n    data.push(newData)\n    window.localStorage.setItem(type, JSON.stringify(data))\n    return newData\n  }\n\n  function removeFromLocalStorage(type, id){\n    console.log(id)\n    let data = JSON.parse(window.localStorage.getItem(type))\n    data = data || []\n    let newData = data.filter(x=>x['_id']['$oid'] !== id)\n    window.localStorage.setItem(type, JSON.stringify(newData))\n    console.log(data.length - newData.length)\n    return {'rowsAffected': data.length - newData.length}\n  }\n\n\n\n  // stange fixes for potential mismatches in validation version\n  Store.prototype.validation = Store.prototype.validation || {}\n  Store.prototype.filterBroken = Store.prototype.filterBroken || function(a,b){return a}\n  // replace impacted store functionality.\n  Store.prototype.findMarkTypes = function(slide, name){\n    return new Promise(function(res, rej){\n      let query={}\n      if(name){\n        query['provenance.analysis.execution_id']= name\n      }\n      if(slide){\n        query['provenance.image.slide'] = slide\n      }\n      let data = findInLocalStorage(\"mark\", query)\n      if (data){\n        const unique = [...new Set(data.map(x => Object.byString(x,'provenance')))];\n        res(unique)\n      } else {\n        res([])\n      }\n\n      // TODO!!!\n    })\n  }\n  Store.prototype.findMark = function(slide, name, specimen, study, footprint, source, x0, x1, y0, y1){\n    return new Promise(function(res, rej){\n      let query = {}\n      if (name){\n        query['provenance.image.slide'] = slide\n      }\n      if(slide){\n        query['provenance.analysis.execution_id']= name\n      }\n      if(source){\n        query['provenance.analysis.source']= source\n      }\n      if(specimen){\n        query['provenance.image.specimen'] = specimen\n      }\n      if(study){\n        query['provenance.image.study'] = study\n      }\n      res(findInLocalStorage('mark', query))\n    }).then(x=>this.filterBroken(x,\"mark\"))\n  }\n  Store.prototype.getMarkByIds = function(ids, slide, study, specimen, source, footprint, x0, x1, y0, y1){\n    return new Promise(function(res, rej){\n      let data = []\n      for (var i in ids){\n        data.push(...findInLocalStorage('mark', {'provenance.analysis.execution_id': ids[i], 'provenance.image.slide': slide}))\n      }\n      res(data)\n    }).then(x=>this.filterBroken(x,\"mark\"))\n  }\n  Store.prototype.getMark = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"mark\", id))\n    }).then(x=>this.filterBroken(x,\"mark\"))\n  }\n  Store.prototype.addMark = function(json){\n    if (!this.validation.mark(json)){\n      console.warn(this.validation.mark.errors)\n    }\n    return new Promise(function(res, rej){\n      // give it an that's probably semi-unique\n      json['_id'] = json['_id'] || {'$oid': Date.now()}\n      res(putInLocalStorage('mark', json))\n    })\n  }\n  Store.prototype.deleteMark = function(id, slide){\n    return new Promise((res, rej)=>{\n      res(removeFromLocalStorage('mark', id))\n    })\n  }\n  Store.prototype.findHeatmap = function(slide, name){\n    return new Promise(function(res, rej){\n      let query = {}\n      if (name){\n        query['provenance.image.slide'] = slide\n      }\n      if(slide){\n        query['provenance.analysis.execution_id']= name\n      }\n      res(findInLocalStorage('heatmap', query))\n    }).then(x=>this.filterBroken(x,\"heatmap\"))\n  }\n  Store.prototype.getHeatmap = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"heatmap\", id))\n    }).then(x=>this.filterBroken(x,\"heatmap\"))\n  }\n  Store.prototype.addHeatmap = function(json){\n    // give it an that's probably semi-unique\n    if (!this.validation.heatmap(json)){\n      console.warn(this.validation.heatmap.errors)\n    }\n    json['_id'] = json['_id'] || {'$oid': Date.now()}\n    return new Promise(function(res, rej){\n      res(putInLocalStorage('heatmap', json))\n    })\n  }\n  Store.prototype.deleteHeatmap = function(id,slide){\n    return new Promise(function(res, rej){\n      res(removeFromLocalStorage('heatmap', id))\n    })\n  }\n\n  // import and export functions\n  Store.prototype.export = function(type){\n    return new Promise(function(res, rej){\n      res(window.localStorage.getItem(type))\n    })\n  }\n  // NOTE -- overwrites\n  Store.prototype.import = function(type, data){\n    return new Promise(function(res, rej){\n      res(window.localStorage.setItem(type, data))\n    })\n  }\n  Store.prototype.findSlide = function(slide, specimen, study, location){\n    return new Promise(function(res, rej){\n      let params = new URLSearchParams(document.location.search.substring(1));\n      let slideId = params.get(\"id\") || \"local\";\n      let local_dummy = {\n        'id': slideId,\n        'mpp': '0.001',\n        'study':\"\",\n        'specimen':\"\"\n      }\n      res([local_dummy])\n    })\n  }\n  Store.prototype.getSlide = function(id){\n    return new Promise(function(res, rej){\n      let params = new URLSearchParams(document.location.search.substring(1));\n      let slideId = params.get(\"id\") || \"local\";\n      console.log(params)\n      let local_dummy = {\n        'id': slideId,\n        'mpp': '0.001',\n        'study':\"\",\n        'specimen':\"\"\n      }\n      res(local_dummy)\n    })\n  }\n  Store.prototype.findTemplate = function(name,type){\n    let query = {}\n    if (name){\n      query.name = name\n    }\n    if (type){\n      query.type = type\n    }\n    return new Promise(function(res, rej){\n      res(findInLocalStorage(\"template\", query))\n    }).then(x=>this.filterBroken(x,\"template\"))\n  }\n  Store.prototype.getTemplate = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"template\", id))\n    }).then(x=>this.filterBroken(x,\"template\"))\n  }\n  Store.prototype.DownloadMarksToFile = function(){\n      // downloads marks for the current slide only\n      // make the browser download it\n      let slide = $D.params.id // portable?\n      slide = decodeURIComponent(slide) // fix for url fix\n      let query = {}\n      query['provenance.image.slide'] = slide\n      let data = JSON.parse(window.localStorage.getItem(\"mark\"))\n      let text = \"\"\n      if (data) {\n        text = JSON.stringify(data.filter(x => {\n          let matching = true;\n          for (var i in query) {\n            matching = matching && Object.byString(x, i) == query[i]\n          }\n          return matching\n        }))\n      }\n      var element = document.createElement('a');\n      var blob = new Blob([text], {type: \"application/json\"});\n      var uri = URL.createObjectURL(blob);\n      element.setAttribute('href', uri);\n      element.setAttribute('download', \"markups.json\");\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n  }\n  Store.prototype.LoadMarksFromFile = function(){\n    // loads marks for the current slide only, without replacement\n    // open a file selector\n    let slide = $D.params.id\n    slide = decodeURIComponent(slide)\n    var element = document.createElement('input');\n    document.body.appendChild(element);\n    element.setAttribute('type', \"file\")\n    element.style.display = 'position: fixed; top: -100em';\n    element.onchange = function(event) {\n      var input = event.target;\n      var reader = new FileReader();\n      reader.onload = function() {\n        var text = reader.result;\n        try {\n          let data = JSON.parse(text)\n          console.log(data)\n          data.forEach(x => {\n            x.provenance.image.slide = slide\n          })\n          console.log($VALIDATION.mark)\n          let data2 = JSON.parse(window.localStorage.getItem(\"mark\"))\n          data2 = data2 || []\n          console.log(data2)\n          data2 = data2.concat(data)\n          data2 = data2.filter($VALIDATION.mark)\n          console.log(data2)\n          window.localStorage.setItem(\"mark\", JSON.stringify(data2))\n          if ($VALIDATION.mark.errors){\n            console.error($VALIDATION.mark.errors)\n          } else {\n            window.location.reload()\n          }\n\n        } catch (e) {\n          console.error(e)\n        }\n        console.log(text.substring(0, 200));\n      };\n      reader.readAsText(input.files[0]);\n    };\n\n    element.click();\n    document.body.removeChild(element);\n  }\n}\n\n// default template\nlet defaultTemplate = {\n    \"_id\": \"0\",\n    \"type\": \"object\",\n    \"id\": \"annotation-form\",\n    \"name\": \"AnnotSchema\",\n    \"description\": \"\",\n    \"links\": [],\n    \"additionalProperties\": false,\n    \"properties\": {\n        \"name\": {\n            \"id\": \"a0\",\n            \"title\": \"Identity Name\",\n            \"type\": \"string\",\n            \"required\": true,\n            \"description\": \"note name\"\n            },\"notes\": {\n            \"id\": \"a1\",\n            \"title\": \"Notes: \",\n            \"type\": \"string\",\n            \"format\":\"textarea\",\n            \"maxLength\": 128\n        }\n    }\n}\n// if no template, add our default\nlet template_data = JSON.parse(window.localStorage.getItem(\"template\"))\nif (!template_data){\n  template_data=[];\n  template_data.push(defaultTemplate)\n  window.localStorage.setItem(\"template\", JSON.stringify(template_data))\n}\n\n\nexport default init_LocalStore\n","function ImgBoxMods() {\n  console.warn(\"{imgbox mods enabled}\")\n  CaMic.prototype.default_loadImg = CaMic.prototype.loadImg\n  CaMic.prototype.loadImg = function(func) {\n    var urlParams = new URLSearchParams(window.location.search);\n    var img_id = urlParams.get('id');\n    let slideId = img_id\n    this.slideId = slideId\n    this.slideName = slideId\n    this.study = \"\"\n    this.specimen = \"\"\n    fetch(img_id + \"/info.json\").then(response => {\n      if (response.status >=400){\n        throw response;\n      } else {\n        return response.json();\n      }\n    }).then(data => {\n      let tile_count = Math.ceil(Math.log2(Math.max(data.height,data.width)))\n      let scaleFactors = []\n      for(let i=0; i <= tile_count; i++){\n        scaleFactors.push(2**i)\n      }\n      let imbox_source = {\n        \"@context\": \"http://iiif.io/api/image/2/context.json\",\n        \"@id\": img_id,\n        \"height\": data.height,\n        \"width\": data.width,\n        \"profile\": [\"http://iiif.io/api/image/2/level2.json\"],\n        \"protocol\": \"http://iiif.io/api/image\",\n        \"tiles\": [{\n          \"scaleFactors\": scaleFactors,\n          \"width\": 256\n        }]\n      }\n      this.viewer.open(imbox_source);\n      // set mpp\n      this.mpp_x = +data['mpp-x']\n      this.mpp_y = +data['mpp-y']\n      this.mpp = data.mpp || this.mpp_x || this.mpp_y || 1e9;\n      this.mpp_x = +data['mpp-x'] || this.mpp\n      this.mpp_y = +data['mpp-y'] || this.mpp\n\n      this.viewer.mpp = this.mpp;\n      this.viewer.mpp_x = this.mpp_x;\n      this.viewer.mpp_y = this.mpp_y;\n          \n      //set scalebar\n      let mpp = this.mpp_x || this.mpp;\n      if(mpp&&mpp!=1e9) this.createScalebar(this.mpp)\n      var imagingHelper = new OpenSeadragonImaging.ImagingHelper({\n        viewer: this.viewer\n      });\n      imagingHelper.setMaxZoom(1);\n      // create item to pass to the callback function, previously x[0] (slide data)\n      let x = {}\n      x['_id'] = \"0\"\n      x.name = this.slideName\n      x.study = this.study\n      x.specimen = this.specimen\n      x.mpp = this.mpp;\n      x.mpp_x = this.mpp_x;\n      x.mpp_y = this.mpp_y;\n      x.location = img_id;\n      x.url = imbox_source;\n      if (func && typeof func === 'function'){\n        func.call(null, x);\n      }\n      Loading.text.textContent = `loading slide's tiles...`;\n      // WARN; note that spyglass isn't working due to semi-hardcoded value at init.js line 140\n      // we may want another init.js or our own callback\n    }).catch(e=>{\n      console.error(e)\n      Loading.text.textContent = \"ERROR - Slide May be Broken or Unsupported\"\n      //if(func && typeof func === 'function') func.call(null,{hasError:true,message:e});\n    })\n\n  }\n}\n\n\nexport default ImgBoxMods\n","import init_LocalStore from './LocalStore.js'\nimport ImgBoxMods from './ImgBoxMods.js'\n\ninit_LocalStore()\nImgBoxMods()\nconsole.warn(\"This setup is intended for imagebox\")\n// parcel build package/imgbox_package.js\n"]}