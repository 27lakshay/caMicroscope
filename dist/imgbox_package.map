{"version":3,"sources":["LocalStore.js","ImgBoxMods.js","imgbox_package.js"],"names":["init_LocalStore","findInLocalStorage","type","query","data","JSON","parse","window","localStorage","getItem","filter","matching","i","Object","byString","x","getInLocalStorage","id","putInLocalStorage","newData","push","setItem","stringify","removeFromLocalStorage","error","alert","warn","o","s","a","replace","split","n","length","k","prototype","findMarkTypes","slide","name","Promise","res","rej","unique","Set","map","findMark","specimen","study","footprint","source","x0","x1","y0","y1","getMarkByIds","ids","getMark","addMark","json","Date","now","deleteMark","findHeatmap","getHeatmap","addHeatmap","deleteHeatmap","export","import","ImgBoxMods","default_loadImg","Camic","loadImg","func","params","slideId","URLSearchParams","document","location","search","substring","get","slideName","ibmox_url","decodeURIComponent","viewer","open","OpenSeadragonImaging","ImagingHelper","setMaxZoom","mpp","url","call","text","textContent","console"],"mappings":"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","file":"imgbox_package.map","sourceRoot":"../package","sourcesContent":["// overwrite store with equivalent local functions\nfunction init_LocalStore(){\n  // requirements\n  console.warn(\"{localstore mods enabled}\")\n  Object.byString = function(o, s) {\n      s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n      s = s.replace(/^\\./, '');           // strip a leading dot\n      var a = s.split('.');\n      for (var i = 0, n = a.length; i < n; ++i) {\n          var k = a[i];\n          if (k in o) {\n              o = o[k];\n          } else {\n              return;\n          }\n      }\n      return o;\n  }\n\n  function findInLocalStorage(type, query){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    return data.filter(x=>{\n      let matching = true;\n      for (i in query){\n        matching = matching && Object.byString(x, i) == query[i]\n      }\n      return matching\n    })\n  }\n\n  function getInLocalStorage(type, id){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    return data.filter(x=>x['_id'] == id)[0]\n  }\n\n  function putInLocalStorage(type, newData){\n    let data = JSON.parse(window.localStorage.getItem(type))\n    data.push(newData)\n    window.localStorage.setItem(type, JSON.stringify(data))\n    return newData\n  }\n\n  function removeFromLocalStorage(type, id){\n    console.error('Delete operation currently unsupported')\n    window.alert('Delete operation currently unsupported')\n  }\n\n\n  // replace impacted store functionality.\n  Store.prototype.findMarkTypes = function(slide, name){\n    return new Promise(function(res, rej){\n      let query={}\n      if (name){\n        query['provenance.image.slide'] = slide\n      }\n      if(slide){\n        query['provenance.analysis.execution_id']= name\n      }\n      let data = findInLocalStorage(\"mark\", query)\n      const unique = [...new Set(data.map(x => Object.byString(x,'provenance.analysis.execution_id')))];\n      res(unique)\n      // TODO!!!\n    })\n  }\n  Store.prototype.findMark = function(slide, name, specimen, study, footprint, source, x0, x1, y0, y1){\n    return new Promise(function(res, rej){\n      let query = {}\n      if (name){\n        query['provenance.image.slide'] = slide\n      }\n      if(slide){\n        query['provenance.analysis.execution_id']= name\n      }\n      if(source){\n        query['provenance.analysis.source']= source\n      }\n      if(specimen){\n        query['provenance.image.specimen'] = specimen\n      }\n      if(study){\n        query['provenance.image.study'] = study\n      }\n      res(findInLocalStorage('mark', query))\n    })\n  }\n  Store.prototype.getMarkByIds = function(ids, slide, study, specimen, source, footprint, x0, x1, y0, y1){\n    return new Promise(function(res, rej){\n      data = []\n      for (i in ids){\n        data.push(...findInLocalStorage('mark', {'provenance.analysis.execution_id': ids[i]}))\n      }\n      res(data)\n    })\n  }\n  Store.prototype.getMark = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"mark\", id))\n    })\n  }\n  Store.prototype.addMark = function(json){\n    return new Promise(function(res, rej){\n      // give it an that's probably semi-unique\n      json['_id'] = json['_id'] || Date.now()\n      res(putInLocalStorage('mark', json))\n    })\n  }\n  Store.prototype.deleteMark = function(id,slide){\n    return new Promise(function(res, rej){\n      res(removeFromLocalStorage('mark', id))\n    })\n  }\n  Store.prototype.findHeatmap = function(slide, name){\n    return new Promise(function(res, rej){\n      let query = {}\n      if (name){\n        query['provenance.image.slide'] = slide\n      }\n      if(slide){\n        query['provenance.analysis.execution_id']= name\n      }\n      res(findInLocalStorage('heatmap', query))\n    })\n  }\n  Store.prototype.getHeatmap = function(id){\n    return new Promise(function(res, rej){\n      res(getInLocalStorage(\"heatmap\", id))\n    })\n  }\n  Store.prototype.addHeatmap = function(json){\n    // give it an that's probably semi-unique\n    json['_id'] = json['_id'] || Date.now()\n    return new Promise(function(res, rej){\n      res(putInLocalStorage('heatmap', json))\n    })\n  }\n  Store.prototype.deleteHeatmap = function(id,slide){\n    return new Promise(function(res, rej){\n      res(removeFromLocalStorage('heatmap', id))\n    })\n  }\n\n  // import and export functions\n  Store.prototype.export = function(type){\n    return new Promise(function(res, rej){\n      res(window.localStorage.getItem(type))\n    })\n  }\n  // NOTE -- overwrites\n  Store.prototype.import = function(type, data){\n    return new Promise(function(res, rej){\n      res(window.localStorage.setItem(type, data))\n    })\n  }\n}\n\nexport default init_LocalStore\n","function ImgBoxMods(){\n  console.warn(\"{imgbox mods enabled}\")\n  CaMic.prototype.default_loadImg = Camic.prototype.loadImg\n  CaMic.prototype.loadImg = function(func){\n    let params = new URLSearchParams(document.location.search.substring(1));\n    let slideId = params.get(\"id\");\n    this.slideId = x[0][\"_id\"][\"$oid\"]\n    this.slideName = \"local\"\n    this.study = \"\"\n    this.specimen = \"\"\n    let ibmox_url = decodeURIComponent(slideId)\n    this.viewer.open(ibmox_url);\n    // set scalebar\n    //his.createScalebar(x[0].mpp)\n    var imagingHelper = new OpenSeadragonImaging.ImagingHelper({\n      viewer: this.viewer\n    });\n\n    imagingHelper.setMaxZoom(1);\n    // create item to pass to the callback function, previously x[0] (slide data)\n    let x = {}\n    x['_id']\n    x.name = this.slideName\n    x.study = this.study\n    x.specimen = this.specimen\n    x.mpp = 0;\n    x.location = ibmox_url;\n    x.url = ibmox_url\n    if(func && typeof func === 'function') func.call(null,[x]);\n    Loading.text.textContent = `loading slide's tiles...`;\n    this.mpp = 0;\n    // WARN; note that spyglass isn't working due to semi-hardcoded value at init.js line 140\n    // we may want another init.js or our own callback\n  }\n}\n\n\nexport default ImgBoxMods\n","import init_LocalStore from './LocalStore.js'\nimport ImgBoxMods from './ImgBoxMods.js'\n\ninit_LocalStore()\nImgBoxMods()\nconsole.warn(\"This setup is intended for imagebox\")\n"]}